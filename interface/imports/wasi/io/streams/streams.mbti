package gmlewis/spin-moonbit-sdk/interface/imports/wasi/io/streams

alias @gmlewis/spin-moonbit-sdk/interface/imports/wasi/io/error as @error
alias @gmlewis/spin-moonbit-sdk/interface/imports/wasi/io/poll as @poll

// Values

// Types and methods
pub(all) type InputStream Int
impl InputStream {
  blocking_read(Self, UInt64) -> Result[Bytes, StreamError]
  blocking_skip(Self, UInt64) -> Result[UInt64, StreamError]
  drop(Self) -> Unit
  read(Self, UInt64) -> Result[Bytes, StreamError]
  skip(Self, UInt64) -> Result[UInt64, StreamError]
  subscribe(Self) -> @poll.Pollable
}
impl Eq for InputStream
impl Show for InputStream

pub(all) type OutputStream Int
impl OutputStream {
  blocking_flush(Self) -> Result[Unit, StreamError]
  blocking_splice(Self, InputStream, UInt64) -> Result[UInt64, StreamError]
  blocking_write_and_flush(Self, Bytes) -> Result[Unit, StreamError]
  blocking_write_zeroes_and_flush(Self, UInt64) -> Result[Unit, StreamError]
  check_write(Self) -> Result[UInt64, StreamError]
  drop(Self) -> Unit
  flush(Self) -> Result[Unit, StreamError]
  splice(Self, InputStream, UInt64) -> Result[UInt64, StreamError]
  subscribe(Self) -> @poll.Pollable
  write(Self, Bytes) -> Result[Unit, StreamError]
  write_zeroes(Self, UInt64) -> Result[Unit, StreamError]
}
impl Eq for OutputStream
impl Show for OutputStream

pub(all) enum StreamError {
  LastOperationFailed(@error.Error_)
  Closed
}
impl Eq for StreamError
impl Show for StreamError

// Type aliases

// Traits

