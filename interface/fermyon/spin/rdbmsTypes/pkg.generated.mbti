// Generated using `moon info`, DON'T EDIT IT
package "gmlewis/spin-moonbit-sdk/interface/fermyon/spin/rdbmsTypes"

// Values

// Errors

// Types and methods
pub(all) struct Column {
  name : String
  data_type : DbDataType
}
fn Column::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn Column::op_equal(Self, Self) -> Bool // from trait `Eq`
fn Column::output(Self, &Logger) -> Unit // from trait `Show`
fn Column::to_string(Self) -> String // from trait `Show`
impl Eq for Column
impl Show for Column

pub(all) enum DbDataType {
  BOOLEAN
  INT8
  INT16
  INT32
  INT64
  UINT8
  UINT16
  UINT32
  UINT64
  FLOATING32
  FLOATING64
  STR
  BINARY
  OTHER
}
fn DbDataType::equal(Self, Self) -> Bool // from trait `Eq`
fn DbDataType::from(Int) -> Self
#deprecated
fn DbDataType::op_equal(Self, Self) -> Bool // from trait `Eq`
fn DbDataType::ordinal(Self) -> Int
fn DbDataType::output(Self, &Logger) -> Unit // from trait `Show`
fn DbDataType::to_string(Self) -> String // from trait `Show`
impl Eq for DbDataType
impl Show for DbDataType

pub(all) enum DbValue {
  Boolean(Bool)
  Int8(Int)
  Int16(Int)
  Int32(Int)
  Int64(Int64)
  Uint8(Byte)
  Uint16(UInt)
  Uint32(UInt)
  Uint64(UInt64)
  Floating32(Float)
  Floating64(Double)
  Str(String)
  Binary(FixedArray[Byte])
  DbNull
  Unsupported
}
fn DbValue::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn DbValue::op_equal(Self, Self) -> Bool // from trait `Eq`
fn DbValue::output(Self, &Logger) -> Unit // from trait `Show`
fn DbValue::to_string(Self) -> String // from trait `Show`
impl Eq for DbValue
impl Show for DbValue

pub(all) enum Error_ {
  ConnectionFailed(String)
  BadParameter(String)
  QueryFailed(String)
  ValueConversionFailed(String)
  Other(String)
}
fn Error_::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn Error_::op_equal(Self, Self) -> Bool // from trait `Eq`
fn Error_::output(Self, &Logger) -> Unit // from trait `Show`
fn Error_::to_string(Self) -> String // from trait `Show`
impl Eq for Error_
impl Show for Error_

pub(all) enum ParameterValue {
  Boolean(Bool)
  Int8(Int)
  Int16(Int)
  Int32(Int)
  Int64(Int64)
  Uint8(Byte)
  Uint16(UInt)
  Uint32(UInt)
  Uint64(UInt64)
  Floating32(Float)
  Floating64(Double)
  Str(String)
  Binary(FixedArray[Byte])
  DbNull
}
fn ParameterValue::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn ParameterValue::op_equal(Self, Self) -> Bool // from trait `Eq`
fn ParameterValue::output(Self, &Logger) -> Unit // from trait `Show`
fn ParameterValue::to_string(Self) -> String // from trait `Show`
impl Eq for ParameterValue
impl Show for ParameterValue

pub(all) struct RowSet {
  columns : Array[Column]
  rows : Array[Array[DbValue]]
}
fn RowSet::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn RowSet::op_equal(Self, Self) -> Bool // from trait `Eq`
fn RowSet::output(Self, &Logger) -> Unit // from trait `Show`
fn RowSet::to_string(Self) -> String // from trait `Show`
impl Eq for RowSet
impl Show for RowSet

// Type aliases

// Traits

